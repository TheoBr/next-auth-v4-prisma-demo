import { GetServerSideProps } from "next";
import {
  getSession,
  RedirectableProvider,
  signIn,
  signOut,
  useSession,
} from "next-auth/react";
import Head from "next/head";
import styles from "../styles/Home.module.css";

const SiteHead = () => (
  <Head>
    <title>Create Next App with Prisma and NextAuth.js v4</title>
    <meta name="description" content="Generated by create next app" />
    <link rel="icon" href="/favicon.ico" />
  </Head>
);

export default function Home() {
  // Note: The `{required: false}` should be optional, will be fixed soon:
  // https://github.com/nextauthjs/next-auth/issues/2674
  const { data } = useSession({ required: false });

  return (
    <div className={styles.container}>
      <SiteHead />
      {data && <div>User: {data.user?.name}</div>}
      {!data && (
        // Note: This type override is nasty and will be fixed soon:
        // https://github.com/nextauthjs/next-auth/issues/2673
        <button onClick={() => signIn("github" as RedirectableProvider)}>
          Sign In with Github
        </button>
      )}
      {data && <button onClick={() => signOut()}>Sign Out</button>}
    </div>
  );
}

/**
 *  Note: By getting session and returning it as props, we allow NextAuth.js to
 *  pass the session and hydrate the page.
 *
 *  This prevents the "flickering" state of the first render assuming signed-out
 *  or loading state
 */
export const getServerSideProps: GetServerSideProps = async (context) => {
  const session = await getSession({ req: context.req });

  return { props: { session } };
};
